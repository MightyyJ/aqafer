name: Run AQAvit

on:
  workflow_dispatch: # Allows the job to be manually triggered
    inputs:
      customizedSdkUrl:
         description: SDK download URL
         required: true

env:  # Links to the JDK build under test and the native test libs
  USE_TESTENV_PROPERTIES: true
  INTERNAL_CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}

jobs:
  test-set-output:
    runs-on: ubuntu-latest
    steps:
      - name: set output
        id: set-output
        run: |
          echo "image=${{ env.INTERNAL_CONTAINER_REGISTRY }}" >> $GITHUB_OUTPUT
    outputs:
      image: ${{ steps.set-output.outputs.image }}

  setup-parallel-docker:
    runs-on: ubuntu-latest
    needs: test-set-output
    container:
      image: ${{ needs.test-set-output.outputs.image }}
      env:
        USE_TESTENV_PROPERTIES: true
      options: --cpus 1
      credentials:
        username: ${{ secrets.ACR_TOKEN_NAME }}
        password: ${{ secrets.AZURE_ACR_TOKEN_PASS1 }}
    strategy:
      fail-fast: true
      matrix:
        suite: [functional]
    steps:
      - name: Install dependencies
        run: apk add git curl make apache-ant perl bash

      - uses: j-braley/run-aqa@v2.0.2.2
        with:
          jdksource: 'customized'
          customizedSdkUrl: ${{ inputs.customizedSdkUrl }}
          aqa-testsRepo: 'adoptium/aqa-tests:v0.9.6-release'
          build_list: ${{ matrix.suite }} # parallellist to generate
          run_parallel: ${{ inputs.runParallel }}
          num_machines: 4

      - name: Archive parallelList - ${{ matrix.suite }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.suite }}-parallelList.mk
          path: ${{ github.workspace }}/aqa-tests/TKG/parallelList.mk

  run-aqa-parallel-docker:
    runs-on: ubuntu-latest
    needs: setup-parallel-docker
    container:
      image: mycoolregistry2023.azurecr.io/samples/alpine:latest
      env:
        USE_TESTENV_PROPERTIES: true
      options: --cpus 1
      credentials:
        username: ${{ secrets.ACR_TOKEN_NAME }}
        password: ${{ secrets.AZURE_ACR_TOKEN_PASS1 }}
    strategy:
      fail-fast: false
      matrix:
        test_list: ['testList_0', 'testList_1', 'testList_2', 'testList_3'] # numlist is hardcoded...for now
        suite: [functional]
    steps:
      - name: Install dependencies
        run: apk add bash git curl make perl apache-ant freetype-dev fontconfig ttf-dejavu

      - name: Download parallelList - ${{ matrix.suite }}
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.suite }}-parallelList.mk
          path: ./

      - name: Run AQA tests parallel (${{ inputs.runner }}) - ${{ matrix.suite }}_${{ matrix.test_list }}
        uses: j-braley/run-aqa@v2.0.2.2
        if: ${{ inputs.runner != 'windows-2019' }}
        with:
          jdksource: 'customized'
          customizedSdkUrl: ${{ inputs.customizedSdkUrl }}
          aqa-testsRepo: 'adoptium/aqa-tests:v0.9.6-release'
          build_list: ${{ matrix.suite }}
          target : -f parallelList.mk ${{ matrix.test_list }}

      - uses: actions/upload-artifact@v2
        if: always() # Always run this step (even if the tests failed)
        with:
          name: test_output_${{ matrix.suite }}_${{ matrix.test_list }}
          path: ./**/output_*/*.tap
